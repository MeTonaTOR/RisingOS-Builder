name: RisingOS Builder

on:
  workflow_dispatch:
    inputs:
      BRAND:
        description: 'Put your device manufacturer name please.'
        required: true
      CODENAME:
        description: 'Put your device codename please.'
        required: true
      SIGNING:
        description: 'The build signing. Set to "normal" by default.'
        required: true
        default: 'normal'
        type: choice
        options:
          - 'full'
          - 'normal'
          - 'normal-fastboot'
      TYPE:
        description: 'The build type. Set to "userdebug" by default.'
        required: true
        default: 'userdebug'
        type: choice
        options:
          - 'eng'
          - 'user'
          - 'userdebug'
      RELEASE:
        description: 'The build target. Set to "stable" by default.'
        required: true
        default: 'stable'
        type: choice
        options:
          - 'test'
          - 'stable'
      VARIANT:
        description: 'If you wanna build other variants like vanilla, core or gapps.'
        required: false
        default: 'CORE'
        type: choice
        options:
          - 'VANILLA'
          - 'CORE'
          - 'GAPPS'

permissions:
  actions: write
  contents: write
  statuses: write

run-name: "RisingOS Build for ${{ inputs.BRAND }} ${{ inputs.CODENAME }} [${{ inputs.TYPE }}, ${{ inputs.RELEASE }} & ${{ inputs.VARIANT }}]"

jobs:
  check-limit:
    runs-on: ubuntu-latest
    outputs:
      staging: ${{ steps.get_role.outputs.is_staging_member }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Commit and push counter update
        run: |
          COUNTER_FILE=".github/workflow_counter.json"
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add $COUNTER_FILE
          git commit -m "Update workflow run count for @${{ github.actor }}"
          git push
        if: steps.check_limit.outcome == 'success'

  build:
    needs: check-limit
    runs-on: self-hosted
    env:
      USER: sketu
      BRAND: ${{ inputs.BRAND }}
      CODENAME: ${{ inputs.CODENAME }}
      SIGNING: ${{ inputs.SIGNING }}
      TYPE: ${{ inputs.TYPE }}
      RELEASE: ${{ inputs.RELEASE }}
      VARIANT: ${{ inputs.VARIANT }}
      STAGING: ${{ needs.check-limit.outputs.staging }}
      SF_HOST: ${{ secrets.SF_HOST }}
      SF_USERNAME: ${{ secrets.SF_USERNAME }}
      SF_PASSWORD: ${{ secrets.SF_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Init and Sync
        run: bash resync.sh

      - name: Clone Repositories
        run: |
          mkdir -p /home/sketu/rising/vendor/lineage-priv/
          cp -r /home/sketu/keys /home/sketu/rising/vendor/lineage-priv/keys/
          bash clone.sh

      - name: Set flags
        run: bash misc/flags.sh

      - name: Build RisingOS
        run: bash build.sh
            
      - name: Upload Error Log
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: error-log
          path: /home/sketu/rising/out/error.log

      - name: Upload Build JSON
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: build-json
          path: /home/sketu/rising/out/target/product/*/*${{ inputs.CODENAME }}.json

      - name: Upload Build Files
        run: bash upload.sh

      - name: Post-Cleanup
        if: ${{ always() }}
        run: bash clean.sh
